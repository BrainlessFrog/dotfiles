#!/bin/bash
# panel - By BrainlessFrog

# Checking if the panel is already running
if [[ "$(pgrep -cx panel)" -gt 1 ]]; then
    echo "The panel is already running."
    exit 1;
fi

# Checking for previous errors
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# Sourcing colors, configs and functions:
# Variable return the code without '#', use '#${Var}' or '#FF${Var}'
. panel_config
. panel_functions

# Make dmenu use the same font and color
sed -i "s/dmenu_run.*$/dmenu_run -i -r -h \"$PANEL_HEIGHT\" -y \"$PANEL_HEIGHT\" -w \"250\" -q -l \"5\" -p \"> \" -fn \"$PANEL_FONT_ONE\" -nb \"\#${COLOR_BACKGROUND_DARK}\" -nf \"\#${COLOR_FOREGROUND}\" -sb \"\#${COLOR_BACKGROUND_BRIGHT}\" -sf \"\#${COLOR_TERM_BLUE_DARK}\"/g" "$HOME/.config/sxhkd/base.sxhkdrc"
pkill -USR1 -x sxhkd

# Configuring bspwm
bspc config top_padding "$PANEL_HEIGHT"

# Delete old FIFO if it exist, and create a new one
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

# Determine on which computer the panel is running
# According to hostname: $USER-desktop or $USER-laptop
[[ `echo "$HOSTNAME" | grep "desktop"` ]] && DESKTOP=true || DESKTOP=false
$DESKTOP && LAPTOP=false || LAPTOP=true

# Call functions
# Battery
$LAPTOP && while true; do
    echo "BAT$(getBattery)"
    sleep 60;
done > "$PANEL_FIFO" &

# Clock
while true; do
    echo "CLOCK$(getClock)"
    sleep 20;
done > "$PANEL_FIFO" &

# Hidden
while true; do
    echo "HIDDEN$(getHidden)"
    sleep 5;
done > "$PANEL_FIFO" &

# Moc
while true; do
    echo "MOC$(getMoc)"
    sleep 2;
done > "$PANEL_FIFO" &

# Network
while true; do
    echo "NET$(getNetwork)"
    sleep 5;
done > "$PANEL_FIFO" &

# Stalonetray
while true; do
    echo "TRAY$(getStalonetray)"
    sleep 1;
done > "$PANEL_FIFO" &

# Update
while true; do
    $DESKTOP && echo "UPDATE$(getUpdates -a)" || echo "UPDATE$(getUpdates -d)"
    sleep 3600;
done > "$PANEL_FIFO" &

# User
while true; do
    echo "USER$(getUser)"
    sleep 3600;
done > "$PANEL_FIFO" &

# Volume
while true; do
    $DESKTOP && echo "VOL$(getVolume -p 1 en)" || echo "VOL$(getVolume -p 0 fr)"
    sleep 1;
done > "$PANEL_FIFO" &

# Workspace
bspc subscribe report > "$PANEL_FIFO" &

# Calling Bar
panel_bar < "$PANEL_FIFO" | lemonbar -p \
    -n "$PANEL_WM_NAME" \
    -u "2" \
    -g x"$PANEL_HEIGHT" \
    -f "$PANEL_FONT_ONE" \
    -f "$PANEL_FONT_TWO" \
    -F "#FF${COLOR_FOREGROUND}" \
    -B "#FF${COLOR_BACKGROUND_DARK}" \
    | bash &

stalonetray \
    -bg "#${COLOR_BACKGROUND_DARK}" \
    --geometry "1x1-5+2" \
    > /dev/null 2>&1 &

dunst \
    -fn "$PANEL_FONT_ONE_PANGO" \
    -lb "#${COLOR_BACKGROUND_DARK}" \
    -nb "#${COLOR_BACKGROUND_DARK}" \
    -cb "#${COLOR_BACKGROUND_DARK}" \
    -lf "#${COLOR_FOREGROUND}" \
    -nf "#${COLOR_FOREGROUND}" \
    -cf "#${COLOR_FOREGROUND}" \
    -to "10" \
    -geometry "250"x"$((5*PANEL_HEIGHT))"-"0"+"$PANEL_HEIGHT" \
    > /dev/null 2>&1 &

# Keep panel below fullscreen windows
wid=`xdo id -a "$PANEL_WM_NAME"`
tries_left=20
while [[ -z "$wid" -a "$tries_left" -gt 0 ]]; do
    sleep 0.05
    wid=`xdo id -a "$PANEL_WM_NAME"`
    tries_left=$((tries_left - 1))
done
[[ -n "$wid" ]] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
